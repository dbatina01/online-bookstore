openapi: 3.0.3

info:
  title: Online Bookstore API
  version: 0.0.1
paths:
  /books/all:
    get:
      description: Retrieve all available books in the store
      operationId: retrieveAssortmentOfBooks
      responses:
        '200':
          description: Successfully retrieved books
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Book"
  /books/order:
    post:
      description: Place an order of books by given IDs
      operationId: placeAnOrder
      parameters:
        - in: query
          name: bookIds
          schema:
            type: array
            items:
              type: integer
              format: int64
      responses:
        '200':
          description: Successfully placed order
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
  /books/loyalty-points/overview:
    get:
      description: Retrieve loyalty points earned by current customer.
      operationId: retrieveLoyaltyPoints
      responses:
        '200':
          description: Successfully retrieved loyalty points
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoyaltyPointsBalance"
  /books/loyalty-points/order:
    post:
      description: Use loyalty points to get a book for free.
      operationId: useLoyaltyPoints
      parameters:
        - in: query
          name: bookId
          schema:
            type: integer
            format: int64
          required: true
      responses:
        '200':
          description: Successfully used loyalty points
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoyaltyPointsBalance"
components:
  schemas:
    Book:
      type: object
      properties:
        id:
          type: number
        author:
          type: string
        title:
          type: string
        bookType:
          type: string
        basePrice:
          type: number
    Order:
      type: object
      properties:
        totalBooks:
          type: number
        totalPrice:
          type: number
    LoyaltyPointsBalance:
      type: object
      properties:
        username:
          type: string
        loyaltyPoints:
          type: string
